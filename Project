// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

contract smartContract {
    address public owner;
    uint public value;

    constructor() {
        owner = msg.sender;
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Not the contract owner");
        _;
    }

    function setValue(uint _value) public onlyOwner {
        require(_value > 0, "Value is greater than zero");
        value = _value;
    }

    function decrementValue(uint _amount) public onlyOwner {
        require(_amount > 0, "Amount is greater than zero");
        assert(value >= _amount);
        value -= _amount;
    }

    function resetValue() public onlyOwner {
        value = 0;
        if (value != 0) {
            revert("Value reset failed");
        }
    }
}

